{"version":3,"sources":["../../source/modules/checkout.js"],"names":["vv","window","lodge","braintree","eventAttached","generateToken","options","embedded","getTemplate","templateName","loadCSS","successCallback","t","container","document","createElement","innerHTML","className","overlay","reveal","innerContent","form","querySelector","submit","inputs","querySelectorAll","len","length","i","addEventListener","e","styles","addClass","el","target","parentNode","removeClass","disabled","client","create","authorization","err","clientInstance","console","error","d","Date","hostedFields","input","fields","number","selector","placeholder","cvv","expirationDate","getMonth","toString","padStart","getFullYear","hostedFieldsInstance","on","event","formValid","Object","keys","every","key","isValid","cards","type","forEach","card","code","size","setAttribute","field","attribute","value","preventDefault","tokenize","payload","debug","out","poststring","amount","nonce","showLoading","ajax","send","url","endpoint","postString","callback","errorMsg","successMsg","checkout","prepped","prep","getScript","injectCSS","css","path","top","begin","source","events","fire","obj","data","finalOptions","assign","paypal","currency","firstName","lastName","email","recurring","initiatepayment","ppspan","stspan","stopPropagation","appendChild","showerror"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-plusplus */\n\n(function checkout() {\n  const vv = window.lodge;\n\n  /** *************************************************************************************\n   *\n   * window.lodge.braintree (object)\n   * Handle Braintree payment token generation\n   *\n   * PUBLIC-ISH FUNCTIONS\n   * window.lodge.stripe.generateToken(string key, target source)\n   *\n   ************************************************************************************** */\n  vv.braintree = {\n    eventAttached: false,\n\n    generateToken(options) {\n      if (vv.embedded) {\n        // vv.events.fire(vv,'stripetokenrequested',params);\n      } else {\n        // load the markup template, make any needed edits, and return\n        vv.getTemplate({\n          templateName: \"checkout\",\n          loadCSS: false,\n          successCallback: function successCallback(t) {\n            const container = document.createElement(\"div\");\n            container.innerHTML = t;\n            container.className = \"lodge__checkout-wrapper\";\n\n            // show the container while braintree API injects hosted fields\n            vv.overlay.reveal({ innerContent: container });\n\n            // grab the bits we care about\n            const form = document.querySelector(\".lodge__form--braintree\");\n            const submit = document.querySelector(\".lodge__button--braintree\");\n\n            // do highlights for focused name/email\n            const inputs = document.querySelectorAll(\n              \".lodge__form--braintree input\"\n            );\n            const len = inputs.length;\n            for (let i = 0; i < len; i++) {\n              inputs[i].addEventListener(\"focus\", function inputsFocus(e) {\n                vv.styles.addClass({\n                  el: e.target.parentNode,\n                  className: \"braintree-hosted-fields-focused\",\n                });\n              });\n\n              inputs[i].addEventListener(\"blur\", function inputsBlur(e) {\n                vv.styles.removeClass({\n                  el: e.target.parentNode,\n                  className: \"braintree-hosted-fields-focused\",\n                });\n              });\n            }\n\n            submit.disabled = true;\n\n            braintree.client.create(\n              {\n                authorization: options.braintree,\n              },\n              function (err, clientInstance) {\n                if (err) {\n                  console.error(err);\n                  return;\n                }\n\n                // Create input fields and add text styles\n                const d = new Date(); // need this in the call below to customize exp date\n\n                braintree.hostedFields.create(\n                  {\n                    client: clientInstance,\n                    styles: {\n                      input: {\n                        \"font-family\":\"monospace\",\n                        \"height\":\"42px\",\n                        \"color\":\"rgb(40, 44, 55)\",\n                        \"font-size\":\"16px\",\n                        \"line-height\":\"3\",\n                        \"transition\":\"color 0.1s ease 0s\",\n                        \"border\": \"0\",\n                        \"padding\": \"8px\",\n                        \"background-color\":\"transparent\",\n                      },\n                      // Style the text of an invalid input\n                      \"input.invalid\": {\n                        \"color\":\"#E53A40\",\n                      },\n                      // placeholder styles need to be individually adjusted\n                      \"::-webkit-input-placeholder\": {\n                        \"color\":\"rgba(0,0,0,0.4)\",\n                      },\n                      \":-moz-placeholder\": {\n                        \"color\":\"rgba(0,0,0,0.4)\",\n                      },\n                      \"::-moz-placeholder\": {\n                        \"color\":\"rgba(0,0,0,0.4)\",\n                      },\n                      \":-ms-input-placeholder\": {\n                        \"color\":\"rgba(0,0,0,0.4)\",\n                      },\n                    },\n                    // Add information for individual fields\n                    fields: {\n                      number: {\n                        selector: \".lodge__braintree-card-number\",\n                        placeholder: \"0000 0000 0000 0000\",\n                      },\n                      cvv: {\n                        selector: \".lodge__braintree-cvv\",\n                        placeholder: \"123\",\n                      },\n                      expirationDate: {\n                        selector: \".lodge__braintree-expiration-date\",\n                        placeholder: `${(d.getMonth() + 1).toString().padStart(2, '0')} / ${d.getFullYear() + 1}`,\n                      },\n                    },\n                  },\n                  function (err, hostedFieldsInstance) {\n                    if (err) {\n                      console.error(err);\n                      return;\n                    }\n\n                    hostedFieldsInstance.on(\"validityChange\", function (event) {\n                      // Check if all fields are valid, then show submit button\n                      const formValid = Object.keys(event.fields).every(\n                        function (key) {\n                          return event.fields[key].isValid;\n                        }\n                      );\n\n                      if (formValid) {\n                        submit.disabled = false;\n                      } else {\n                        submit.disabled = true;\n                      }\n                    });\n\n                    hostedFieldsInstance.on(\"cardTypeChange\", function (event) {\n                      // Change card bg depending on card type\n                      let cardTypes = ['visa','master-card','discover','maestro','jcb','america-express','diners-club'];\n                      if (event.cards.length === 1) {\n                        vv.styles.addClass({\n                          el: form,\n                          className: event.cards[0].type,\n                        });\n\n                        cardTypes.forEach(function(card) {\n                          vv.styles.removeClass({\n                            el: document.querySelector(\".lodge__braintree-card-number\"),\n                            className: card,\n                          });\n                        });\n\n                        vv.styles.addClass({\n                          el: document.querySelector(\".lodge__braintree-card-number\"),\n                          className: event.cards[0].type,\n                        });\n\n                        // Change the CVV length for AmericanExpress cards\n                        if (event.cards[0].code.size === 4) {\n                          hostedFieldsInstance.setAttribute({\n                            field: \"cvv\",\n                            attribute: \"placeholder\",\n                            value: \"1234\",\n                          });\n                        }\n                      } else {\n                        hostedFieldsInstance.setAttribute({\n                          field: \"cvv\",\n                          attribute: \"placeholder\",\n                          value: \"123\",\n                        });\n                      }\n                    });\n\n                    submit.addEventListener(\n                      \"click\",\n                      function submitHandler(event) {\n                        event.preventDefault();\n\n                        hostedFieldsInstance.tokenize(function tokenize(\n                          error,\n                          payload\n                        ) {\n                          if (error) {\n                            vv.debug.out(error);\n                          } else {\n                            const poststring = `email=${\n                              document.querySelector(\".lodge__braintree-email\").value\n                            }&firstName=${\n                              document.querySelector(\".lodge__braintree-first-name\").value\n                            }&lastName=${\n                              document.querySelector(\".lodge__braintree-last-name\").value\n                            }&amount=${options.amount}&nonce=${payload.nonce}`;\n                            vv.overlay.showLoading();\n                            vv.ajax.send({\n                              url: options.endpoint,\n                              postString: poststring,\n                              callback: function reveal(e, r) {\n                                if (e) {\n                                  vv.overlay.reveal({\n                                    innerContent: `<h2 class=\"lodge__checkout-error\">${options.errorMsg}</h2>`,\n                                  });\n                                } else {\n                                  vv.overlay.reveal({\n                                    innerContent: `<h2 class=\"lodge__checkout-success\">${options.successMsg}</h2>`,\n                                  });\n                                }\n                              },\n                            });\n                          }\n                        });\n                      },\n                      false\n                    );\n                  }\n                );\n              }\n            );\n          },\n        });\n      }\n    },\n  };\n\n  /** *************************************************************************************\n     *\n     * window.lodge.checkout (object)\n     * start the checkout flow for multiple payments in a controlled overlay\n     *\n     * PUBLIC FUNCTIONS\n     * window.lodge.checkout.begin(obj options, target source)\n     *\n     * EXAMPLE\n     vv.checkout.begin({\n\t\t \t\t\"braintree\"  : \"pk_test_wh4t3ver\", // false OR public stripe key\n\t\t \t\t\"paypal\"     : true, // boolean for \"should we have paypal as an option\"\n\t\t \t\t\"endpoint\"   : for AJAX calls on submit\n\t \t\t});\n     *\n     ************************************************************************************** */\n  vv.checkout = {\n    prepped: false,\n\n    prep() {\n      if (!vv.checkout.prepped) {\n        // add in styles\n        vv.getScript({\n          url: \"https://js.braintreegateway.com/web/3.46.0/js/client.min.js\",\n          callback: function callback() {\n            vv.getScript({\n              url:\n                \"https://js.braintreegateway.com/web/3.46.0/js/hosted-fields.min.js\",\n              callback: function secondCallback() {\n                vv.styles.injectCSS({\n                  css: `${vv.path}/templates/checkout.css`,\n                  top: true,\n                });\n                vv.checkout.prepped = true;\n              },\n            });\n          },\n        });\n      }\n    },\n\n    begin(options, source) {\n      if (vv.embedded) {\n        vv.events.fire({ obj: vv, type: \"begincheckout\", data: options });\n      } else {\n        vv.checkout.prep();\n        // set up the empty object we'll populate in the return\n        const defaultOptions = {\n          braintree: false,\n          paypal: false,\n          currency: false,\n          firstName: false,\n          lastName: false,\n          email: false,\n          recurring: false,\n          amount: false,\n          endpoint: \"\",\n          successMsg: \"Success.\",\n          errorMsg: \"There was a problem.\",\n        };\n\n        const finalOptions = Object.assign(defaultOptions, options);\n        vv.checkout.initiatepayment(finalOptions, source);\n      }\n    },\n\n    initiatepayment(options, source) {\n      // just starts the payment flow and does the steps needed based on\n      // the options passed in...\n      // BT only\n      if (options.braintree && !options.paypal) {\n        vv.braintree.generateToken(options, source);\n      }\n      // Paypal only\n      else if (!options.braintree && options.paypal) {\n        vv.events.fire({\n          obj: vv,\n          type: \"checkoutdata\",\n          data: options,\n          target: source,\n        });\n        vv.overlay.reveal({\n          innerContent: '<div class=\"lodge__loading\"></div>',\n        });\n      }\n      // Stripe and Paypal\n      else if (options.braintree && options.paypal) {\n        // Create HTML elements to use as selectors\n        const container = document.createElement(\"div\");\n        container.className = \"lodge__checkout-choose\";\n\n        const ppspan = document.createElement(\"span\");\n        const stspan = document.createElement(\"span\");\n\n        ppspan.innerHTML = \"Pay with PayPal\";\n        ppspan.className = \"pay-pp\";\n        stspan.innerHTML = \"Pay with a credit card\";\n        stspan.className = \"pay-cc\";\n\n        // Create a special event to detect Paypal chosen\n        ppspan.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          vv.events.fire({\n            obj: vv,\n            type: \"checkoutdata\",\n            data: options,\n            target: source,\n          });\n          vv.overlay.showLoading();\n        });\n\n        // Create a special event to detect Braintree chosen\n        stspan.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          vv.braintree.generateToken(options.braintree, source);\n        });\n\n        container.appendChild(ppspan);\n        container.appendChild(stspan);\n\n        vv.overlay.reveal({ innerContent: container });\n      }\n      // No available payment types, by options or SSL limits on Stripe\n      else {\n        vv.checkout.showerror();\n      }\n    },\n\n    showerror() {\n      vv.overlay.reveal({\n        innerContent:\n          '<div class=\"lodge__checkout-error\">There are no valid payment types. Please add a payment connection. Check to make sure your site supports SSL (https) if you are using Braintree.</div>',\n      });\n    },\n  };\n})(); // END\n"],"file":"checkout.js"}